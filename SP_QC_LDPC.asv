clear;
clc;

NumRound = 1e4; % 测试数据的数量
snr_dB = linspace(-6,-3,5);% snr_dB
ber = zeros(size(snr_dB));% 使用ldpc编码的误码率


% 创建LDPC编码的基矩阵

B = [10	-1 141	108	3	-1	122	98
    -1	11 99	142	-1	4	40	123
    3	96 124	-1	12	97	5	-1
    39	4  -1	125	97	13	-1	6	];
B = [
    39 -1 79 -1 294 328 297 68
    -1 79 -1 75 158 295 148 274
    206 209 287 324 ]
blockSize = 150;
pcmatrix = ldpcQuasiCyclicMatrix(blockSize,B);
% 创建LDPC编码器和解码器
cfgLDPCEnc = ldpcEncoderConfig(pcmatrix);
cfgLDPCDec = ldpcDecoderConfig(pcmatrix);

% 增加噪声信息
for i = 1:length(snr_dB)
    % 原始数据
    data = randi([0 1],cfgLDPCEnc.NumInformationBits,NumRound);
    % 对原始数据ldpc编码
    encData = ldpcEncode(data, cfgLDPCEnc);
    % 调制
    txData = pskmod(encData,2,pi);
    % 添加AWGN噪声
    noisyData = awgn(txData,snr_dB(i)+3,'measured');
    % 解调
    rxData = pskdemod(noisyData,2,pi,OutputType='llr');
    % 解码ldpc码字
    decData = ldpcDecode(rxData,cfgLDPCDec,10);
    % 计算误码率
    [~,ber(i)] = biterr(data,double(decData));
end

ber2 = berawgn(snr_dB, 'psk', 2, 'nondiff');

semilogy(snr_dB+3,ber,'*-b','LineWidth',1.25);
hold on 
semilogy(snr_dB,ber2,'x-r','LineWidth',1.25);
xlabel('EbN0(dB)');
ylabel('ber');
grid on